#!/bin/bash

# ============ Options ============
VERBOSE=false
DRY_RUN=false

for arg in "$@"; do
  case $arg in
    --verbose)
      VERBOSE=true
      shift
      ;;
    --dry-run)
      DRY_RUN=true
      shift
      ;;
  esac
done

log() {
  if [ "$VERBOSE" = true ]; then
    echo "$1"
  fi
}

# ============ Chargement des variables depuis .env ============
if [ -f .env ]; then
  export $(grep -v '^#' .env | xargs)
fi

# ============ Lecture interactive des variables manquantes ============

[ -z "$DB_HOST" ] && read -p "üîå Nom du conteneur base de donn√©es (DB_HOST) : " DB_HOST
[ -z "$DB_DATABASE" ] && read -p "üóÉÔ∏è Nom de la base de donn√©es (DB_DATABASE) : " DB_DATABASE
[ -z "$DB_USERNAME" ] && read -p "üë§ Nom d'utilisateur (DB_USERNAME) [defaut: root] : " DB_USERNAME
DB_USERNAME=${DB_USERNAME:-root}
[ -z "$DB_PASSWORD" ] && read -s -p "üîë Mot de passe utilisateur (DB_PASSWORD) : " DB_PASSWORD && echo
[ -z "$DB_INIT_SQL_FILE" ] && read -p "üìÑ Chemin du fichier SQL (DB_INIT_SQL_FILE) : " DB_INIT_SQL_FILE

# ============ V√©rifications ============

if [ ! -f "$DB_INIT_SQL_FILE" ]; then
  echo "‚ùå Fichier SQL introuvable : $DB_INIT_SQL_FILE"
  exit 1
fi

if ! docker ps --format '{{.Names}}' | grep -q "^${DB_HOST}$"; then
  echo "‚ùå Le conteneur '$DB_HOST' n'est pas en cours d'ex√©cution."
  exit 2
fi

log "üìã Configuration :"
log "Conteneur   : $DB_HOST"
log "Fichier SQL : $DB_INIT_SQL_FILE"
log "Utilisateur : $DB_USERNAME"
log "Base cible  : $DB_DATABASE"

# ============ Mode Dry-Run ============

if [ "$DRY_RUN" = true ]; then
  echo "üß™ [Dry Run] Import NON ex√©cut√©. Voici la commande qui serait lanc√©e :"
  echo "docker exec -i $DB_HOST mysql -u$DB_USERNAME -p***** $DB_DATABASE < $DB_INIT_SQL_FILE"
  exit 0
fi

# ============ Copie du fichier SQL ============
TMP_SQL_PATH="/tmp/import-env.sql"
docker cp "$DB_INIT_SQL_FILE" "$DB_HOST:$TMP_SQL_PATH"

# ============ Cr√©ation de la base ============
docker exec "$DB_HOST" \
  bash -c "mysql -u$DB_USERNAME -p$DB_PASSWORD -e 'CREATE DATABASE IF NOT EXISTS \`$DB_DATABASE\`;'" || {
    echo "‚ùå Erreur cr√©ation base."
    exit 3
  }

# ============ Import SQL ============
docker exec -i "$DB_HOST" \
  bash -c "mysql -u$DB_USERNAME -p$DB_PASSWORD $DB_DATABASE -e 'source $TMP_SQL_PATH'" || {
    echo "‚ùå Erreur d'importation."
    exit 4
  }

# ============ Nettoyage ============
docker exec "$DB_HOST" rm -f "$TMP_SQL_PATH"
echo "‚úÖ Importation r√©ussie dans '$DB_DATABASE'."
